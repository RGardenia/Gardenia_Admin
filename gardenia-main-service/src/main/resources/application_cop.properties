server.port=9001
spring.application.name=gardenia-main-service
spring.profiles.active=dev

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${MYSQL_DB_HOST:127.0.0.1}:3306/${MYSQL_DB_NAME:Gardenia_admin}?allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
spring.datasource.username=${MYSQL_DB_USERNAME:root}
spring.datasource.password=${MYSQL_DB_PASSWORD:151613}

spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8

# Redis \u914D\u7F6E
#spring.redis.host=${REDIS_DB_HOST:127.0.0.1}
#spring.redis.port=6379
#spring.redis.database=0
#spring.redis.timeout=1800000
#spring.redis.lettuce.pool.max-active=20
#spring.redis.lettuce.pool.max-wait=-1
#\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4(\u8D1F\u6570\u8868\u793A\u6CA1\u9650\u5236)
#spring.redis.lettuce.pool.max-idle=5
#spring.redis.lettuce.pool.min-idle=0

# nacos\u670D\u52A1\u5730\u5740
#spring.cloud.nacos.discovery.server-addr=${REDIS_DB_HOST:127.0.0.1}:8848

#\u5F00\u542F\u7194\u65AD\u673A\u5236
#feign.hystrix.enabled=true
# \u8BBE\u7F6Ehystrix\u8D85\u65F6\u65F6\u95F4\uFF0C\u9ED8\u8BA41000ms
#hystrix.metrics.polling-interval-ms=
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=6000


### Sharding Sphere \u5206\u5E93\u5206\u8868
# \u5185\u5B58\u6A21\u5F0F
spring.shardingsphere.mode.type=Standalone
spring.shardingsphere.mode.repository.type=JDBC
# \u6253\u5370SQl
spring.shardingsphere.props.sql-show=true

#------------------------\u6570\u636E\u6E90\u914D\u7F6E------------------#
# \u914D\u7F6E\u771F\u5B9E\u6570\u636E\u6E90
spring.shardingsphere.datasource.names=server-00,server-01

# \u914D\u7F6E\u7B2C 1 \u4E2A\u6570\u636E\u6E90
spring.shardingsphere.datasource.server-00.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.server-00.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.server-00.jdbc-url=jdbc:mysql://${MYSQL_DB_HOST:127.0.0.1}:3306/cnn_model?allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.server-00.username=root
spring.shardingsphere.datasource.server-00.password=151613

# \u914D\u7F6E\u7B2C 2 \u4E2A\u6570\u636E\u6E90
spring.shardingsphere.datasource.server-01.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.server-01.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.server-01.jdbc-url=jdbc:mysql://${MYSQL_DB_HOST:127.0.0.1}:3306/cnn_model?allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.server-01.username=root
spring.shardingsphere.datasource.server-01.password=151613

# \u8BFB\u5199\u5206\u79BB\u914D\u7F6E
spring.shardingsphere.rules.readwrite-splitting.data-sources.gardenia.static-strategy.write-data-source-name=server-00
# \u8BFB\u6570\u636E\u6E90\u540D\u79F0\uFF0C\u591A\u4E2A\u4ECE\u6570\u636E\u6E90\u7528\u9017\u53F7\u5206\u9694
spring.shardingsphere.rules.readwrite-splitting.data-sources.gardenia.static-strategy.read-data-source-names=server-01
spring.shardingsphere.rules.readwrite-splitting.data-sources.gardenia.load-balancer-name=alg_round
# \u8D1F\u8F7D\u5747\u8861\u7B97\u6CD5\u914D\u7F6E
spring.shardingsphere.rules.readwrite-splitting.load-balancers.alg_round.type=ROUND_ROBIN
spring.shardingsphere.rules.readwrite-splitting.load-balancers.alg_random.type=RANDOM
spring.shardingsphere.rules.readwrite-splitting.load-balancers.alg_weight.type=WEIGHT
spring.shardingsphere.rules.readwrite-splitting.load-balancers.alg_weight.props=1

#------------------------\u6807\u51C6\u5206\u7247\u8868\u914D\u7F6E\uFF08\u6570\u636E\u8282\u70B9\u914D\u7F6E\uFF09
# \u7531\u6570\u636E\u6E90\u540D + \u8868\u540D\u7EC4\u6210\uFF0C\u4EE5\u5C0F\u6570\u70B9\u5206\u9694\u3002\u591A\u4E2A\u8868\u4EE5\u9017\u53F7\u5206\u9694\uFF0C\u652F\u6301 inline \u8868\u8FBE\u5F0F
# \u7F3A\u7701\u8868\u793A\u4F7F\u7528\u5DF2\u77E5\u6570\u636E\u6E90\u4E0E\u903B\u8F91\u8868\u540D\u79F0\u751F\u6210\u6570\u636E\u8282\u70B9\uFF0C\u7528\u4E8E\u5E7F\u64AD\u8868\uFF08\u5373\u6BCF\u4E2A\u5E93\u4E2D\u90FD\u9700\u8981\u4E00\u4E2A\u540C\u6837\u7684\u8868\u7528\u4E8E\u5173\u8054\u67E5\u8BE2\uFF0C\u591A\u4E3A\u5B57\u5178\u8868\uFF09\u6216\u53EA\u5206\u5E93\u4E0D\u5206\u8868\u4E14\u6240\u6709\u5E93\u7684\u8868\u7ED3\u6784\u5B8C\u5168\u4E00\u81F4\u7684\u60C5\u51B5
spring.shardingsphere.rules.sharding.tables.sys_user.actual-data-nodes=server-0$->{0..1}.sys_user
spring.shardingsphere.rules.sharding.tables.sys_log.actual-data-nodes=server-00.sys_log_0$->{0..1}
#spring.shardingsphere.rules.sharding.tables.t_order_item.actual-data-nodes=server-order$->{0..1}.t_order_item$->{0..1}
#spring.shardingsphere.rules.sharding.tables.t_dict.actual-data-nodes=server-order$->{0..1}.t_dict,server-user.t_dict
#------------------------\u5206\u5E93\u7B56\u7565\uFF0C\u7F3A\u7701\u8868\u793A\u4F7F\u7528\u9ED8\u8BA4\u5206\u5E93\u7B56\u7565\uFF0C\u4EE5\u4E0B\u7684\u5206\u7247\u7B56\u7565\u53EA\u80FD\u9009\u5176\u4E00
# \u7528\u4E8E\u5355\u5206\u7247\u952E\u7684\u6807\u51C6\u5206\u7247\u573A\u666F
# \u5206\u7247\u5217\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.sys_user.database-strategy.standard.sharding-column=sex
# \u5206\u7247\u7B97\u6CD5\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.sys_user.database-strategy.standard.sharding-algorithm-name=sys_user_inline
#------------------------\u5206\u8868\u7B56\u7565
# \u7528\u4E8E\u5355\u5206\u7247\u952E\u7684\u6807\u51C6\u5206\u7247\u573A\u666F
# \u5206\u7247\u5217\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.sys_log.table-strategy.standard.sharding-column=id
# \u5206\u7247\u7B97\u6CD5\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.sys_log.table-strategy.standard.sharding-algorithm-name=sys_log_inline
#------------------------\u5206\u7247\u7B97\u6CD5\u914D\u7F6E
# \u884C\u8868\u8FBE\u5F0F\u5206\u7247\u7B97\u6CD5
# \u5206\u7247\u7B97\u6CD5\u7C7B\u578B
spring.shardingsphere.rules.sharding.sharding-algorithms.sys_user_inline.type=INLINE
# \u5206\u7247\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E
spring.shardingsphere.rules.sharding.sharding-algorithms.sys_user_inline.props.algorithm-expression=server-order$->{sex % 2}
# \u53D6\u6A21\u5206\u7247\u7B97\u6CD5
# \u5206\u7247\u7B97\u6CD5\u7C7B\u578B
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_mod.type=MOD
# \u5206\u7247\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_mod.props.sharding-count=2
# \u54C8\u5E0C\u53D6\u6A21\u5206\u7247\u7B97\u6CD5
# \u5206\u7247\u7B97\u6CD5\u7C7B\u578B
spring.shardingsphere.rules.sharding.sharding-algorithms.sys_log_inline.type=HASH_MOD
# \u5206\u7247\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E
spring.shardingsphere.rules.sharding.sharding-algorithms.sys_log_inline.props.sharding-count=2
#------------------------\u5206\u5E03\u5F0F\u5E8F\u5217\u7B56\u7565\u914D\u7F6E
# \u5206\u5E03\u5F0F\u5E8F\u5217\u5217\u540D\u79F0
#spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=id
## \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u540D\u79F0
#spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=alg_snowflake
## \u5206\u5E03\u5F0F\u5E8F\u5217\u5217\u540D\u79F0
#spring.shardingsphere.rules.sharding.tables.t_order_item.key-generate-strategy.column=id
## \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u540D\u79F0
#spring.shardingsphere.rules.sharding.tables.t_order_item.key-generate-strategy.key-generator-name=alg_snowflake
#------------------------\u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u914D\u7F6E
# \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u7C7B\u578B
#spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.type=SNOWFLAKE
# \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E
#spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.props.xxx=
#------------------------\u7ED1\u5B9A\u8868\u914D\u7F6E
# \u7ED1\u5B9A\u8868\u89C4\u5219\u5217\u8868
#spring.shardingsphere.rules.sharding.binding-tables[0]=t_order,t_order_item
#------------------------\u5E7F\u64AD\u8868\u914D\u7F6E
# \u5E7F\u64AD\u8868\u89C4\u5219\u5217\u8868
#spring.shardingsphere.rules.sharding.broadcast-tables[0]=t_dict
